<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.test.mapper.UserMapper">


		<!-- select collection 이용해서 유저 리스트 가져오기 -->
<!-- 	<resultMap type="UserModel" id="userList">
		<id property="userNo" column="user_no"/> <result>태그를 써도 결과는 같지만 키가 될 값은 id로 사용하여 구분해주는게 좋은 것 같음
		각 유저들의 이미지리스트를 가져오기 (1:M)
		<collection column="user_no" property="imgList" select="com.example.demo.test.mapper.ImgMapper.getImgInfoList" javaType="java.util.List" ofType="ImgModel" >
		</collection>
	</resultMap> -->
	
	<!-- collection 파라미터 여러개 사용법 --> 
	<resultMap type="UserModel" id="userList">
		<collection property="imgList" column="{userNo=user_no,name=name}" select="com.example.demo.test.mapper.ImgMapper.getImgInfoList" javaType="java.util.List"></collection>
	</resultMap>
	
	<!-- join collection 이용해서 유저 리스트 가져오기 -->
<!-- 	<resultMap type="UserModel" id="userList" autoMapping="true">
		<id property="userNo" column="user_no"/>
		<collection property="imgList" ofType="ImgModel" javaType="java.util.List" autoMapping="true"></collection>
	</resultMap> -->
	
	<!-- select collection 이용해서 유저 리스트 가져오기 -->
	<select id="getUserList" resultMap="userList">
		SELECT *
		FROM user
		WHERE 1=1
		order by user_no desc
	</select>
	
	<!-- join collection 이용해서 유저 리스트 가져오기 -->
<!-- 	<select id="getUserList" resultMap="userList">
		SELECT u.user_no
		,u.name
		,u.email
		,u.tel
		,ui.img_name
		FROM user u LEFT JOIN user_img ui
		ON u.user_no = ui.user_no
		WHERE 1=1
		order by user_no desc
	</select> -->
	
	
	<!-- 유저정보 가져오기 -->
	<select id="getUserInfo" resultType="UserModel">
		SELECT *
		FROM user
		WHERE 1=1
		AND user_no = #{userNo}
	</select>
	
	
	<!-- imageList 가져오기 -->
	<select id="getImgList" resultType="imgModel">
		SELECT *
		FROM user_img
		WHERE 1=1
		AND user_no = #{userNo}
	</select>
	
	<!-- 유저 리스트 추가 -->
	<insert id="insertUser" parameterType="UserModel">
		INSERT INTO user
		(
		email
		, name
		, tel
		)
		VALUES
		(
		#{email}
		, #{name}
		, #{tel}
		)
	</insert>
	
	<!-- 리스트 이름 클릭시 디테일 -->
	<select id="detailUser" resultType="UserModel">
		SELECT 
		*
		FROM user
		WHERE 1=1
		AND user_no = #{userNo}
	</select>
	
	<!-- ajax 그냥 테스트 해본거 -->
	<select id="ajaxTest" resultType="String">
		SELECT
		name
		FROM user
		WHERE 1=1
		AND email = #{email}
	</select>
	
	<!-- user 정보 수정 --> 
	<update id="updateUser" parameterType="UserModel">
		UPDATE user
		SET email = #{email}
		, tel = #{tel}
		WHERE 1=1 
		AND user_no = #{userNo}
	</update>
	
	<!-- user 삭제 -->
	<delete id="deleteUser" parameterType="UserModel">
		DELETE 
		FROM user
		WHERE 1=1
		AND user_no = #{userNo};
		
		DELETE
		FROM user_img
		WHERE 1=1
		AND user_no = #{userNo};
	</delete>
</mapper>